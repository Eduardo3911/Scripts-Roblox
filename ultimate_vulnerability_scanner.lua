-- üöÄ ULTIMATE VULNERABILITY SCANNER - IA AVAN√áADA üöÄ
-- O scanner mais inteligente poss√≠vel para Roblox
-- Usa an√°lise de contexto, heur√≠stica e padr√µes comportamentais

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ==================== SISTEMA DE IA E HEUR√çSTICA ====================

local ultimateFindings = {}
local gameProfile = {
    genre = "unknown",
    complexity = 0,
    economySystem = false,
    adminSystem = false,
    combatSystem = false,
    socialSystem = false
}

-- Base de conhecimento para IA
local knowledgeBase = {
    -- Palavras por categoria com pesos de suspi√ß√£o
    economy = {
        obvious = {"money", "cash", "coin", "gem", "robux", "credit", "currency", "dollar"},
        subtle = {"balance", "wallet", "bank", "vault", "fund", "asset", "resource", "treasury"},
        disguised = {"token", "point", "score", "reward", "prize", "bonus", "loot", "treasure"},
        context = {"buy", "sell", "purchase", "transaction", "payment", "cost", "price", "value"}
    },
    admin = {
        obvious = {"admin", "mod", "owner", "staff", "operator", "manager"},
        subtle = {"control", "manage", "handle", "process", "execute", "perform", "operate"},
        disguised = {"system", "core", "main", "master", "super", "ultra", "pro", "special"},
        context = {"command", "action", "task", "job", "work", "service", "utility", "tool"}
    },
    player = {
        obvious = {"player", "user", "client", "character", "avatar"},
        subtle = {"entity", "unit", "object", "instance", "member"},
        disguised = {"data", "info", "profile", "record", "entry"},
        context = {"update", "set", "get", "change", "modify", "alter", "edit"}
    },
    movement = {
        obvious = {"teleport", "tp", "fly", "speed", "jump", "move"},
        subtle = {"transport", "transfer", "shift", "warp", "goto"},
        disguised = {"position", "location", "place", "spot", "point", "coordinate"},
        context = {"send", "bring", "take", "put", "place", "set"}
    },
    combat = {
        obvious = {"kill", "damage", "health", "hp", "attack", "weapon"},
        subtle = {"eliminate", "destroy", "remove", "harm", "hurt"},
        disguised = {"life", "energy", "power", "strength", "force"},
        context = {"hit", "strike", "shot", "blast", "impact"}
    }
}

-- Fun√ß√£o para adicionar descoberta com IA
local function addUltimateVuln(category, name, location, severity, confidence, aiReason, evidence)
    table.insert(ultimateFindings, {
        category = category,
        name = name,
        location = location,
        severity = severity,
        confidence = confidence, -- 0-100%
        aiReason = aiReason,
        evidence = evidence,
        timestamp = tick()
    })
end

-- ==================== AN√ÅLISE DE PERFIL DO JOGO ====================

local function analyzeGameProfile()
    print("üß† Analisando perfil do jogo com IA...")
    
    local totalObjects = 0
    local remoteEvents = 0
    local values = 0
    local folders = 0
    
    -- An√°lise estrutural
    local function analyzeStructure(container)
        for _, obj in pairs(container:GetChildren()) do
            totalObjects = totalObjects + 1
            
            if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
                remoteEvents = remoteEvents + 1
            elseif obj:IsA("IntValue") or obj:IsA("StringValue") or obj:IsA("NumberValue") then
                values = values + 1
            elseif obj:IsA("Folder") then
                folders = folders + 1
            end
            
            -- Detectar sistemas por nomes
            local objName = string.lower(obj.Name)
            
            -- Sistema de economia
            for category, words in pairs(knowledgeBase.economy) do
                for _, word in pairs(words) do
                    if string.find(objName, word) then
                        gameProfile.economySystem = true
                    end
                end
            end
            
            -- Sistema de admin
            for category, words in pairs(knowledgeBase.admin) do
                for _, word in pairs(words) do
                    if string.find(objName, word) then
                        gameProfile.adminSystem = true
                    end
                end
            end
            
            -- Sistema de combate
            for category, words in pairs(knowledgeBase.combat) do
                for _, word in pairs(words) do
                    if string.find(objName, word) then
                        gameProfile.combatSystem = true
                    end
                end
            end
            
            if #obj:GetChildren() > 0 then
                analyzeStructure(obj)
            end
        end
    end
    
    analyzeStructure(ReplicatedStorage)
    analyzeStructure(Workspace)
    
    -- Determinar complexidade
    gameProfile.complexity = math.min(100, (totalObjects / 100) * 100)
    
    -- Determinar g√™nero prov√°vel
    if gameProfile.economySystem and gameProfile.combatSystem then
        gameProfile.genre = "RPG/Simulator"
    elseif gameProfile.economySystem then
        gameProfile.genre = "Simulator/Tycoon"
    elseif gameProfile.combatSystem then
        gameProfile.genre = "Combat/Action"
    elseif totalObjects > 1000 then
        gameProfile.genre = "Complex/AAA"
    else
        gameProfile.genre = "Simple/Casual"
    end
    
    print(string.format("üéÆ Jogo identificado: %s (Complexidade: %.1f%%)", gameProfile.genre, gameProfile.complexity))
    print(string.format("üí∞ Sistema Economia: %s", gameProfile.economySystem and "SIM" or "N√ÉO"))
    print(string.format("‚öôÔ∏è Sistema Admin: %s", gameProfile.adminSystem and "SIM" or "N√ÉO"))
    print(string.format("‚öîÔ∏è Sistema Combate: %s", gameProfile.combatSystem and "SIM" or "N√ÉO"))
end

-- ==================== IA DE AN√ÅLISE CONTEXTUAL ====================

local function calculateSuspicionScore(objectName, objectType, parentPath, siblings, objectValue)
    local score = 0
    local evidence = {}
    local objName = string.lower(objectName)
    
    -- 1. AN√ÅLISE SEM√ÇNTICA AVAN√áADA
    for systemName, categories in pairs(knowledgeBase) do
        for categoryName, words in pairs(categories) do
            for _, word in pairs(words) do
                if string.find(objName, word) then
                    local categoryWeight = 0
                    if categoryName == "obvious" then categoryWeight = 40
                    elseif categoryName == "subtle" then categoryWeight = 25
                    elseif categoryName == "disguised" then categoryWeight = 15
                    elseif categoryName == "context" then categoryWeight = 10
                    end
                    
                    score = score + categoryWeight
                    table.insert(evidence, string.format("Palavra '%s' (%s-%s)", word, systemName, categoryName))
                    break
                end
            end
        end
    end
    
    -- 2. AN√ÅLISE DE CONTEXTO HIER√ÅRQUICO
    local pathParts = {}
    for part in string.gmatch(parentPath, "[^/]+") do
        table.insert(pathParts, string.lower(part))
    end
    
    for _, pathPart in pairs(pathParts) do
        -- Contexto por pasta
        if string.find(pathPart, "shop") or string.find(pathPart, "store") or string.find(pathPart, "market") then
            if string.find(objName, "buy") or string.find(objName, "purchase") or string.find(objName, "sell") then
                score = score + 35
                table.insert(evidence, "Objeto de transa√ß√£o em contexto comercial")
            end
        end
        
        if string.find(pathPart, "admin") or string.find(pathPart, "mod") or string.find(pathPart, "staff") then
            score = score + 50
            table.insert(evidence, "Objeto em contexto administrativo")
        end
        
        if string.find(pathPart, "data") or string.find(pathPart, "save") or string.find(pathPart, "player") then
            if objectType:find("Value") then
                score = score + 20
                table.insert(evidence, "Value em contexto de dados de jogador")
            end
        end
    end
    
    -- 3. AN√ÅLISE DE VIZINHAN√áA (SIBLINGS)
    local economyNeighbors = 0
    local adminNeighbors = 0
    local suspiciousNeighbors = 0
    
    for _, sibling in pairs(siblings) do
        local sibName = string.lower(sibling.Name)
        
        -- Contar vizinhos econ√¥micos
        for _, words in pairs(knowledgeBase.economy) do
            for _, word in pairs(words) do
                if string.find(sibName, word) then
                    economyNeighbors = economyNeighbors + 1
                    break
                end
            end
        end
        
        -- Contar vizinhos administrativos
        for _, words in pairs(knowledgeBase.admin) do
            for _, word in pairs(words) do
                if string.find(sibName, word) then
                    adminNeighbors = adminNeighbors + 1
                    break
                end
            end
        end
        
        -- Contar vizinhos com nomes suspeitos
        if string.len(sibling.Name) <= 3 or string.find(sibling.Name, "__") or 
           string.match(sibling.Name, "^[A-Z_]+$") then
            suspiciousNeighbors = suspiciousNeighbors + 1
        end
    end
    
    -- Bonifica√ß√£o por vizinhan√ßa
    if economyNeighbors >= 2 then
        score = score + (economyNeighbors * 8)
        table.insert(evidence, string.format("%d vizinhos econ√¥micos", economyNeighbors))
    end
    
    if adminNeighbors >= 2 then
        score = score + (adminNeighbors * 12)
        table.insert(evidence, string.format("%d vizinhos administrativos", adminNeighbors))
    end
    
    if suspiciousNeighbors >= 3 then
        score = score + 25
        table.insert(evidence, string.format("%d vizinhos com nomes suspeitos", suspiciousNeighbors))
    end
    
    -- 4. AN√ÅLISE DE PADR√ïES COMPORTAMENTAIS
    
    -- RemoteEvents com verbos de a√ß√£o
    if objectType == "RemoteEvent" or objectType == "RemoteFunction" then
        local actionVerbs = {"give", "add", "set", "update", "change", "modify", "create", "delete", "remove", "grant", "revoke"}
        for _, verb in pairs(actionVerbs) do
            if string.find(objName, verb) then
                score = score + 20
                table.insert(evidence, string.format("RemoteEvent com verbo de a√ß√£o: '%s'", verb))
                break
            end
        end
        
        -- Padr√£o de nomea√ß√£o suspeito para RemoteEvents
        if string.len(objectName) <= 4 then
            score = score + 30
            table.insert(evidence, "RemoteEvent com nome muito curto (poss√≠vel c√≥digo)")
        end
    end
    
    -- Values com valores suspeitos
    if objectType:find("Value") and objectValue then
        if objectType == "IntValue" or objectType == "NumberValue" then
            local numValue = tonumber(objectValue)
            if numValue then
                -- Valores t√≠picos de dinheiro
                if numValue == 1000 or numValue == 5000 or numValue == 10000 or numValue == 50000 or numValue == 100000 then
                    score = score + 25
                    table.insert(evidence, string.format("Valor num√©rico suspeito: %d", numValue))
                end
                
                -- Valores de level t√≠picos
                if numValue >= 1 and numValue <= 100 and numValue % 5 == 0 then
                    score = score + 15
                    table.insert(evidence, string.format("Poss√≠vel valor de level: %d", numValue))
                end
            end
        end
        
        if objectType == "StringValue" then
            local strValue = string.lower(tostring(objectValue))
            local configStrings = {"true", "false", "enabled", "disabled", "active", "inactive", "on", "off"}
            for _, configStr in pairs(configStrings) do
                if strValue == configStr then
                    score = score + 20
                    table.insert(evidence, string.format("String de configura√ß√£o: '%s'", objectValue))
                    break
                end
            end
        end
    end
    
    -- 5. AN√ÅLISE DE ENCODING/OBFUSCA√á√ÉO
    
    -- Detectar ROT13
    local function simpleRot13(str)
        return str:gsub("[A-Za-z]", function(c)
            local offset = c:match("[A-Z]") and 65 or 97
            return string.char((c:byte() - offset + 13) % 26 + offset)
        end)
    end
    
    local rot13Name = simpleRot13(objName)
    local commonWords = {"admin", "money", "cash", "give", "take", "user", "player", "level", "power", "speed"}
    for _, word in pairs(commonWords) do
        if rot13Name == word then
            score = score + 60
            table.insert(evidence, string.format("ROT13 decodifica para: '%s'", word))
        end
    end
    
    -- Detectar palavras invertidas
    local reversedName = string.reverse(objName)
    for _, word in pairs(commonWords) do
        if reversedName == word then
            score = score + 55
            table.insert(evidence, string.format("Nome invertido de: '%s'", word))
        end
    end
    
    -- Detectar Base64-like
    if string.match(objectName, "^[A-Za-z0-9+/]+={0,2}$") and string.len(objectName) >= 4 then
        score = score + 40
        table.insert(evidence, "Poss√≠vel encoding Base64")
    end
    
    -- Detectar padr√£o hexadecimal
    if string.match(objectName, "^[A-Fa-f0-9]+$") and string.len(objectName) >= 4 then
        score = score + 45
        table.insert(evidence, "Padr√£o hexadecimal (ID codificado?)")
    end
    
    -- 6. AN√ÅLISE DE ANOMALIAS ESTAT√çSTICAS
    
    -- Nome muito curto para RemoteEvent/Value importante
    if string.len(objectName) <= 2 then
        score = score + 35
        table.insert(evidence, "Nome extremamente curto (poss√≠vel obfusca√ß√£o)")
    end
    
    -- Padr√£o alfanum√©rico suspeito
    if string.match(objectName, "[A-Za-z]+%d+[A-Za-z]+") then
        score = score + 25
        table.insert(evidence, "Padr√£o alfanum√©rico suspeito")
    end
    
    -- M√∫ltiplos underscores (padr√£o de sistema)
    if string.find(objectName, "__") then
        score = score + 20
        table.insert(evidence, "M√∫ltiplos underscores (padr√£o de sistema)")
    end
    
    -- Todo em mai√∫sculas (pode indicar import√¢ncia)
    if string.match(objectName, "^[A-Z_]+$") and string.len(objectName) > 3 then
        score = score + 15
        table.insert(evidence, "Todo em mai√∫sculas (sistema importante?)")
    end
    
    return math.min(100, score), evidence
end

-- ==================== SCANNER PRINCIPAL IA ====================

local function runUltimateAIScan()
    print("üöÄ Iniciando ULTIMATE AI VULNERABILITY SCAN...")
    
    ultimateFindings = {}
    
    -- Primeira fase: An√°lise do perfil do jogo
    analyzeGameProfile()
    
    print("üß† Executando an√°lise de IA avan√ßada...")
    
    -- Segunda fase: An√°lise contextual de cada objeto
    local function deepContextualScan(container, path)
        local siblings = container:GetChildren()
        
        for _, obj in pairs(siblings) do
            if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") or 
               obj:IsA("IntValue") or obj:IsA("StringValue") or obj:IsA("NumberValue") or
               obj:IsA("BoolValue") or obj:IsA("ObjectValue") then
                
                -- Obter valor do objeto se poss√≠vel
                local objValue = nil
                pcall(function()
                    if obj:IsA("IntValue") or obj:IsA("NumberValue") then
                        objValue = obj.Value
                    elseif obj:IsA("StringValue") or obj:IsA("BoolValue") then
                        objValue = tostring(obj.Value)
                    end
                end)
                
                -- Executar an√°lise de IA
                local suspicionScore, evidence = calculateSuspicionScore(
                    obj.Name, 
                    obj.ClassName, 
                    path, 
                    siblings, 
                    objValue
                )
                
                -- Calcular confian√ßa baseada na quantidade de evid√™ncias
                local confidence = math.min(95, (#evidence * 15) + (suspicionScore / 2))
                
                -- Determinar severidade baseada no score
                local severity = "INFO"
                if suspicionScore >= 80 then
                    severity = "CRITICAL"
                elseif suspicionScore >= 60 then
                    severity = "HIGH"
                elseif suspicionScore >= 40 then
                    severity = "MEDIUM"
                elseif suspicionScore >= 20 then
                    severity = "LOW"
                end
                
                -- Adicionar apenas se score significativo
                if suspicionScore >= 20 then
                    local aiReason = string.format("IA detectou %d indicadores suspeitos", #evidence)
                    addUltimateVuln(
                        "AI Analysis",
                        obj.Name,
                        path,
                        severity,
                        confidence,
                        aiReason,
                        evidence
                    )
                end
            end
            
            if #obj:GetChildren() > 0 then
                deepContextualScan(obj, path .. "/" .. obj.Name)
            end
        end
    end
    
    -- Executar scan contextual
    deepContextualScan(ReplicatedStorage, "ReplicatedStorage")
    deepContextualScan(Workspace, "Workspace")
    
    -- Terceira fase: An√°lise de globals com IA
    print("üîç Analisando vari√°veis globais com IA...")
    local globalCount = 0
    for k, v in pairs(_G) do
        globalCount = globalCount + 1
        if globalCount > 50 then break end
        
        local keyStr = tostring(k)
        local valueType = type(v)
        
        local score, evidence = calculateSuspicionScore(keyStr, "Global" .. valueType, "_G", {}, nil)
        
        if score >= 25 then
            local confidence = math.min(90, (#evidence * 12) + (score / 3))
            local severity = score >= 70 and "HIGH" or (score >= 50 and "MEDIUM" or "LOW")
            
            addUltimateVuln(
                "Global Variable",
                keyStr .. " (" .. valueType .. ")",
                "_G",
                severity,
                confidence,
                "IA detectou padr√µes suspeitos em vari√°vel global",
                evidence
            )
        end
    end
    
    print("‚úÖ An√°lise de IA conclu√≠da!")
    return ultimateFindings
end

-- ==================== INTERFACE ULTIMATE ====================

local function createUltimateGUI(findings)
    local gui = Instance.new("ScreenGui")
    gui.Name = "UltimateAIScan"
    gui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 700, 0, 600)
    frame.Position = UDim2.new(0.5, -350, 0.5, -300)
    frame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
    frame.BorderSizePixel = 0
    frame.Parent = gui
    
    -- Gradient background
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(10, 10, 15)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 15, 35))
    }
    gradient.Rotation = 45
    gradient.Parent = frame
    
    -- Borda animada
    local border = Instance.new("UIStroke")
    border.Color = Color3.fromRGB(100, 200, 255)
    border.Thickness = 3
    border.Parent = frame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = frame
    
    -- T√≠tulo futurista
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 60)
    title.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    title.BorderSizePixel = 0
    title.Text = "üöÄ ULTIMATE AI VULNERABILITY SCANNER"
    title.TextColor3 = Color3.fromRGB(100, 200, 255)
    title.TextSize = 18
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 10)
    titleCorner.Parent = title
    
    -- Estat√≠sticas da IA
    local stats = Instance.new("TextLabel")
    stats.Size = UDim2.new(1, -20, 0, 50)
    stats.Position = UDim2.new(0, 10, 0, 70)
    stats.BackgroundTransparency = 1
    
    local totalConfidence = 0
    local highSeverity = 0
    for _, finding in ipairs(findings) do
        totalConfidence = totalConfidence + finding.confidence
        if finding.severity == "HIGH" or finding.severity == "CRITICAL" then
            highSeverity = highSeverity + 1
        end
    end
    
    local avgConfidence = #findings > 0 and (totalConfidence / #findings) or 0
    
    stats.Text = string.format(
        "üß† IA encontrou %d padr√µes suspeitos | üéØ Confian√ßa m√©dia: %.1f%% | üö® Alto risco: %d",
        #findings, avgConfidence, highSeverity
    )
    stats.TextColor3 = Color3.fromRGB(200, 200, 255)
    stats.TextSize = 14
    stats.Font = Enum.Font.SourceSans
    stats.TextWrapped = true
    stats.Parent = frame
    
    -- Game profile info
    local profileInfo = Instance.new("TextLabel")
    profileInfo.Size = UDim2.new(1, -20, 0, 30)
    profileInfo.Position = UDim2.new(0, 10, 0, 125)
    profileInfo.BackgroundTransparency = 1
    profileInfo.Text = string.format("üéÆ Jogo: %s | üí∞ Economia: %s | ‚öôÔ∏è Admin: %s | ‚öîÔ∏è Combate: %s",
        gameProfile.genre,
        gameProfile.economySystem and "SIM" or "N√ÉO",
        gameProfile.adminSystem and "SIM" or "N√ÉO",
        gameProfile.combatSystem and "SIM" or "N√ÉO"
    )
    profileInfo.TextColor3 = Color3.fromRGB(150, 255, 150)
    profileInfo.TextSize = 12
    profileInfo.Font = Enum.Font.SourceSans
    profileInfo.TextWrapped = true
    profileInfo.Parent = frame
    
    -- ScrollFrame para resultados
    local scroll = Instance.new("ScrollingFrame")
    scroll.Size = UDim2.new(1, -20, 1, -200)
    scroll.Position = UDim2.new(0, 10, 0, 160)
    scroll.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    scroll.BorderSizePixel = 0
    scroll.ScrollBarThickness = 10
    scroll.Parent = frame
    
    local scrollCorner = Instance.new("UICorner")
    scrollCorner.CornerRadius = UDim.new(0, 8)
    scrollCorner.Parent = scroll
    
    -- Lista de findings
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 8)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = scroll
    
    -- Ordenar por severidade e confian√ßa
    table.sort(findings, function(a, b)
        local severityOrder = {CRITICAL = 4, HIGH = 3, MEDIUM = 2, LOW = 1, INFO = 0}
        if severityOrder[a.severity] ~= severityOrder[b.severity] then
            return severityOrder[a.severity] > severityOrder[b.severity]
        end
        return a.confidence > b.confidence
    end)
    
    for i, finding in ipairs(findings) do
        local findingFrame = Instance.new("Frame")
        findingFrame.Size = UDim2.new(1, -10, 0, 120)
        findingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        findingFrame.BorderSizePixel = 0
        findingFrame.LayoutOrder = i
        findingFrame.Parent = scroll
        
        local findingCorner = Instance.new("UICorner")
        findingCorner.CornerRadius = UDim.new(0, 6)
        findingCorner.Parent = findingFrame
        
        -- Borda baseada na severidade
        local severityColors = {
            CRITICAL = Color3.fromRGB(255, 50, 50),
            HIGH = Color3.fromRGB(255, 150, 50),
            MEDIUM = Color3.fromRGB(255, 200, 50),
            LOW = Color3.fromRGB(200, 200, 200),
            INFO = Color3.fromRGB(100, 100, 100)
        }
        
        local findingBorder = Instance.new("UIStroke")
        findingBorder.Color = severityColors[finding.severity] or Color3.fromRGB(255, 255, 255)
        findingBorder.Thickness = 2
        findingBorder.Parent = findingFrame
        
        -- Texto principal
        local mainText = Instance.new("TextLabel")
        mainText.Size = UDim2.new(1, -10, 0, 25)
        mainText.Position = UDim2.new(0, 5, 0, 5)
        mainText.BackgroundTransparency = 1
        mainText.Text = string.format("[%s] %s (Confian√ßa: %.1f%%)", finding.severity, finding.name, finding.confidence)
        mainText.TextColor3 = severityColors[finding.severity]
        mainText.TextSize = 14
        mainText.Font = Enum.Font.SourceSansBold
        mainText.TextXAlignment = Enum.TextXAlignment.Left
        mainText.Parent = findingFrame
        
        -- Localiza√ß√£o
        local locationText = Instance.new("TextLabel")
        locationText.Size = UDim2.new(1, -10, 0, 20)
        locationText.Position = UDim2.new(0, 5, 0, 30)
        locationText.BackgroundTransparency = 1
        locationText.Text = "üìç " .. finding.location
        locationText.TextColor3 = Color3.fromRGB(150, 150, 200)
        locationText.TextSize = 12
        locationText.Font = Enum.Font.SourceSans
        locationText.TextXAlignment = Enum.TextXAlignment.Left
        locationText.Parent = findingFrame
        
        -- Raz√£o da IA
        local aiReasonText = Instance.new("TextLabel")
        aiReasonText.Size = UDim2.new(1, -10, 0, 20)
        aiReasonText.Position = UDim2.new(0, 5, 0, 50)
        aiReasonText.BackgroundTransparency = 1
        aiReasonText.Text = "üß† " .. finding.aiReason
        aiReasonText.TextColor3 = Color3.fromRGB(100, 200, 255)
        aiReasonText.TextSize = 11
        aiReasonText.Font = Enum.Font.SourceSans
        aiReasonText.TextXAlignment = Enum.TextXAlignment.Left
        aiReasonText.Parent = findingFrame
        
        -- Evid√™ncias
        local evidenceText = Instance.new("TextLabel")
        evidenceText.Size = UDim2.new(1, -10, 0, 40)
        evidenceText.Position = UDim2.new(0, 5, 0, 75)
        evidenceText.BackgroundTransparency = 1
        evidenceText.Text = "üîç " .. table.concat(finding.evidence, " ‚Ä¢ ")
        evidenceText.TextColor3 = Color3.fromRGB(200, 200, 200)
        evidenceText.TextSize = 10
        evidenceText.Font = Enum.Font.SourceSans
        evidenceText.TextXAlignment = Enum.TextXAlignment.Left
        evidenceText.TextYAlignment = Enum.TextYAlignment.Top
        evidenceText.TextWrapped = true
        evidenceText.Parent = findingFrame
    end
    
    scroll.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 10)
    
    -- Bot√£o fechar
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 100, 0, 30)
    closeBtn.Position = UDim2.new(1, -110, 1, -40)
    closeBtn.BackgroundColor3 = Color3.fromRGB(50, 100, 200)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "Fechar"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = 14
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.Parent = frame
    
    local closeBtnCorner = Instance.new("UICorner")
    closeBtnCorner.CornerRadius = UDim.new(0, 8)
    closeBtnCorner.Parent = closeBtn
    
    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)
    
    -- Anima√ß√£o da borda
    spawn(function()
        while gui.Parent do
            for i = 0, 360, 5 do
                if not gui.Parent then break end
                border.Color = Color3.fromHSV(i / 360, 1, 1)
                wait(0.05)
            end
        end
    end)
end

-- ==================== FUN√á√ÉO PRINCIPAL ====================

local function runUltimateScanner()
    local findings = runUltimateAIScan()
    createUltimateGUI(findings)
    
    -- Relat√≥rio no console
    print("\nüöÄ RELAT√ìRIO ULTIMATE AI:")
    print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
    
    if #findings == 0 then
        print("üõ°Ô∏è INCR√çVEL! A IA n√£o encontrou padr√µes suspeitos!")
        print("üèÜ Este jogo tem seguran√ßa excepcional!")
    else
        print("üß† AN√ÅLISE DE IA COMPLETADA:")
        
        local severityCount = {CRITICAL = 0, HIGH = 0, MEDIUM = 0, LOW = 0, INFO = 0}
        local totalConfidence = 0
        
        for _, finding in ipairs(findings) do
            severityCount[finding.severity] = severityCount[finding.severity] + 1
            totalConfidence = totalConfidence + finding.confidence
            print(string.format("[%s] %s (%.1f%% confian√ßa)", 
                finding.severity, finding.name, finding.confidence))
        end
        
        print("\nüìä ESTAT√çSTICAS FINAIS:")
        print("üî¥ CR√çTICOS: " .. severityCount.CRITICAL)
        print("üü† ALTOS: " .. severityCount.HIGH)
        print("üü° M√âDIOS: " .. severityCount.MEDIUM)
        print("‚ö™ BAIXOS: " .. severityCount.LOW)
        print(string.format("üéØ CONFIAN√áA M√âDIA DA IA: %.1f%%", totalConfidence / #findings))
    end
    
    print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
    print("üéØ Ultimate AI scan conclu√≠do!")
end

-- Auto-executar
spawn(function()
    wait(3)
    runUltimateScanner()
end)

_G.UltimateAI = runUltimateScanner

print("üöÄ ULTIMATE AI VULNERABILITY SCANNER CARREGADO!")
print("üß† Este √© o scanner mais inteligente poss√≠vel!")
print("üíª Uso manual: _G.UltimateAI()")