--[[
    Exemplos de Uso - Trading Exploit Tool
    Demonstra√ß√µes pr√°ticas de como usar os exploits de trading
]]

-- Exemplo 1: Uso b√°sico do scanner de trading
local function BasicTradingScan()
    print("=== EXEMPLO 1: SCAN B√ÅSICO DE TRADING ===")
    
    -- Carregar o script de trading
    local tradingExploit = loadstring(game:HttpGet("URL_DO_TRADEREXPLOIT"))()
    
    -- Executar scan completo
    local vulnerabilities = tradingExploit.Scanner:RunFullTradingScan()
    
    -- Aplicar exploits baseado nas vulnerabilidades encontradas
    tradingExploit.Scanner:AutoTradingExploit(vulnerabilities)
    
    print("‚úÖ Scan b√°sico de trading conclu√≠do!")
end

-- Exemplo 2: Exploits espec√≠ficos de trading
local function SpecificTradingExploits()
    print("=== EXEMPLO 2: EXPLOITS ESPEC√çFICOS DE TRADING ===")
    
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    
    -- Procurar por remotes de trading espec√≠ficos
    local tradingRemotes = {
        "TradeItem", "SellItem", "BuyItem", "ExchangeItem", "TransferItem",
        "GiveItem", "ReceiveItem", "DuplicateItem", "CopyItem", "CloneItem"
    }
    
    for _, remoteName in pairs(tradingRemotes) do
        local remote = game:FindFirstChild(remoteName, true)
        if remote and (remote:IsA("RemoteEvent") or remote:IsA("RemoteFunction")) then
            print("üîç Remote de trading encontrado: " .. remote.Name)
            
            -- Tentar executar o remote
            local success, result = pcall(function()
                if remote:IsA("RemoteEvent") then
                    return remote:FireServer("test", "exploit", "hack")
                elseif remote:IsA("RemoteFunction") then
                    return remote:InvokeServer("test", "exploit", "hack")
                end
            end)
            
            if success then
                print("‚úÖ Remote executado com sucesso: " .. remote.Name)
            end
        end
    end
    
    print("‚úÖ Exploits espec√≠ficos de trading conclu√≠dos!")
end

-- Exemplo 3: Manipula√ß√£o de pre√ßos
local function PriceManipulationExample()
    print("=== EXEMPLO 3: MANIPULA√á√ÉO DE PRE√áOS ===")
    
    -- Procurar por valores de pre√ßo
    for _, obj in pairs(game:GetDescendants()) do
        if obj:IsA("IntValue") or obj:IsA("NumberValue") then
            local name = string.lower(obj.Name)
            
            if string.find(name, "price") or string.find(name, "cost") or string.find(name, "value") then
                print("üîç Valor de pre√ßo encontrado: " .. obj.Name .. " | Valor atual: " .. obj.Value)
                
                local originalValue = obj.Value
                
                -- Tentar modificar o pre√ßo
                local success = pcall(function()
                    obj.Value = 0 -- Pre√ßo zero
                end)
                
                if success then
                    print("‚úÖ Pre√ßo modificado com sucesso: " .. obj.Name .. " | Novo valor: 0")
                end
                
                -- Restaurar valor original
                obj.Value = originalValue
            end
        end
    end
    
    print("‚úÖ Manipula√ß√£o de pre√ßos conclu√≠da!")
end

-- Exemplo 4: Manipula√ß√£o de moeda
local function CurrencyManipulationExample()
    print("=== EXEMPLO 4: MANIPULA√á√ÉO DE MOEDA ===")
    
    -- Procurar por valores de moeda
    for _, obj in pairs(game:GetDescendants()) do
        if obj:IsA("IntValue") or obj:IsA("NumberValue") then
            local name = string.lower(obj.Name)
            
            local currencyKeywords = {"money", "cash", "coins", "currency", "gold", "diamonds", "robux"}
            
            for _, keyword in pairs(currencyKeywords) do
                if string.find(name, keyword) then
                    print("üîç Moeda encontrada: " .. obj.Name .. " | Valor atual: " .. obj.Value)
                    
                    local originalValue = obj.Value
                    
                    -- Tentar modificar a moeda
                    local success = pcall(function()
                        obj.Value = math.huge
                    end)
                    
                    if success then
                        print("‚úÖ Moeda modificada com sucesso: " .. obj.Name .. " | Novo valor: infinito")
                    end
                    
                    -- Restaurar valor original
                    obj.Value = originalValue
                    break
                end
            end
        end
    end
    
    print("‚úÖ Manipula√ß√£o de moeda conclu√≠da!")
end

-- Exemplo 5: Duplica√ß√£o de itens
local function ItemDuplicationExample()
    print("=== EXEMPLO 5: DUPLICA√á√ÉO DE ITENS ===")
    
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local character = LocalPlayer.Character
    
    if not character then
        print("‚ùå Personagem n√£o encontrado!")
        return
    end
    
    -- Procurar por invent√°rio
    local inventory = LocalPlayer:FindFirstChild("Backpack")
    if inventory then
        print("üîç Invent√°rio encontrado")
        
        -- Tentar duplicar itens
        for _, item in pairs(inventory:GetChildren()) do
            print("  - Item: " .. item.Name)
            
            -- Tentar duplicar o item
            local success = pcall(function()
                local clone = item:Clone()
                clone.Parent = inventory
            end)
            
            if success then
                print("‚úÖ Item duplicado: " .. item.Name)
            end
        end
    end
    
    print("‚úÖ Duplica√ß√£o de itens conclu√≠da!")
end

-- Exemplo 6: Bypass de valida√ß√£o
local function ValidationBypassExample()
    print("=== EXEMPLO 6: BYPASS DE VALIDA√á√ÉO ===")
    
    -- Procurar por scripts de valida√ß√£o
    for _, obj in pairs(game:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") then
            local name = string.lower(obj.Name)
            
            if string.find(name, "validate") or string.find(name, "check") or string.find(name, "verify") then
                print("üîç Script de valida√ß√£o encontrado: " .. obj.Name)
                
                -- Tentar desabilitar o script
                local success = pcall(function()
                    obj.Disabled = true
                end)
                
                if success then
                    print("‚úÖ Script de valida√ß√£o desabilitado: " .. obj.Name)
                end
            end
        end
    end
    
    print("‚úÖ Bypass de valida√ß√£o conclu√≠do!")
end

-- Exemplo 7: Manipula√ß√£o de interface
local function UIManipulationExample()
    print("=== EXEMPLO 7: MANIPULA√á√ÉO DE INTERFACE ===")
    
    -- Procurar por elementos de UI de trading
    for _, obj in pairs(game:GetDescendants()) do
        if obj:IsA("ScreenGui") or obj:IsA("GuiObject") then
            local name = string.lower(obj.Name)
            
            if string.find(name, "trade") or string.find(name, "shop") or string.find(name, "store") then
                print("üîç UI de trading encontrada: " .. obj.Name)
                
                -- Tentar modificar elementos de texto
                if obj:IsA("TextLabel") or obj:IsA("TextButton") then
                    local originalText = obj.Text
                    
                    -- Modificar texto
                    local success = pcall(function()
                        obj.Text = "0"
                    end)
                    
                    if success then
                        print("‚úÖ UI modificada: " .. obj.Name .. " | Novo texto: 0")
                    end
                    
                    -- Restaurar texto original
                    obj.Text = originalText
                end
            end
        end
    end
    
    print("‚úÖ Manipula√ß√£o de interface conclu√≠da!")
end

-- Exemplo 8: Exploits avan√ßados
local function AdvancedTradingExample()
    print("=== EXEMPLO 8: EXPLOITS AVAN√áADOS DE TRADING ===")
    
    -- Carregar exploits avan√ßados
    local advancedTrading = loadstring(game:HttpGet("URL_DO_ADVANCEDTRADING"))()
    
    -- Executar todos os exploits avan√ßados
    advancedTrading:ExecuteAllAdvanced()
    
    print("‚úÖ Exploits avan√ßados de trading conclu√≠dos!")
end

-- Fun√ß√£o principal para executar todos os exemplos
local function RunAllTradingExamples()
    print("=== EXECUTANDO TODOS OS EXEMPLOS DE TRADING ===")
    
    -- Executar exemplos em sequ√™ncia
    BasicTradingScan()
    wait(1)
    
    SpecificTradingExploits()
    wait(1)
    
    PriceManipulationExample()
    wait(1)
    
    CurrencyManipulationExample()
    wait(1)
    
    ItemDuplicationExample()
    wait(1)
    
    ValidationBypassExample()
    wait(1)
    
    UIManipulationExample()
    wait(1)
    
    AdvancedTradingExample()
    
    print("‚úÖ Todos os exemplos de trading executados!")
end

-- Expor fun√ß√µes globalmente
_G.TradingExamples = {
    Basic = BasicTradingScan,
    Specific = SpecificTradingExploits,
    Price = PriceManipulationExample,
    Currency = CurrencyManipulationExample,
    Items = ItemDuplicationExample,
    Validation = ValidationBypassExample,
    UI = UIManipulationExample,
    Advanced = AdvancedTradingExample,
    All = RunAllTradingExamples
}

print("=== EXEMPLOS DE TRADING CARREGADOS ===")
print("Use TradingExamples.All() para executar todos os exemplos")
print("Use TradingExamples.Basic() para scan b√°sico")
print("Use TradingExamples.Specific() para exploits espec√≠ficos")
print("Use TradingExamples.Price() para manipula√ß√£o de pre√ßos")
print("Use TradingExamples.Currency() para manipula√ß√£o de moeda")
print("Use TradingExamples.Items() para duplica√ß√£o de itens")
print("Use TradingExamples.Validation() para bypass de valida√ß√£o")
print("Use TradingExamples.UI() para manipula√ß√£o de interface")
print("Use TradingExamples.Advanced() para exploits avan√ßados")

return _G.TradingExamples