-- üïµÔ∏è STEALTH VULNERABILITY SCANNER - DETECTA NOMES ESCONDIDOS üïµÔ∏è
-- Scanner avan√ßado que encontra vulnerabilidades disfar√ßadas

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local stealthFindings = {}

-- Adicionar descoberta stealth
local function addStealth(category, name, location, suspicion, pattern, details)
    table.insert(stealthFindings, {
        category = category,
        name = name,
        location = location,
        suspicion = suspicion, -- CRITICAL, HIGH, MEDIUM, LOW
        pattern = pattern,
        details = details
    })
end

-- AN√ÅLISE DE PADR√ïES SUSPEITOS
local function analyzeSuspiciousPatterns()
    print("üîç Analisando padr√µes suspeitos...")
    
    -- 1. PADR√ïES DE NOMES SUSPEITOS (n√£o √≥bvios)
    local suspiciousPatterns = {
        -- Padr√µes de economia/dinheiro disfar√ßados
        {"currency", "coin", "gem", "point", "credit", "token", "balance", "wallet", "bank", "vault"},
        {"cash", "dollar", "euro", "robux", "gold", "silver", "diamond", "crystal", "orb"},
        {"fund", "asset", "resource", "treasure", "loot", "reward", "prize", "bonus"},
        
        -- Padr√µes de admin/modera√ß√£o disfar√ßados  
        {"manage", "control", "handle", "process", "execute", "perform", "operate", "run"},
        {"command", "cmd", "action", "task", "job", "work", "service", "utility"},
        {"system", "core", "main", "master", "super", "ultra", "mega", "pro"},
        
        -- Padr√µes de teleporte/movimento
        {"move", "goto", "warp", "jump", "shift", "transport", "transfer", "send"},
        {"position", "location", "place", "spot", "point", "coordinate", "zone"},
        
        -- Padr√µes de level/progress√£o
        {"level", "rank", "tier", "grade", "stage", "phase", "progress", "advance"},
        {"exp", "experience", "skill", "ability", "power", "strength", "energy"},
        
        -- Padr√µes de controle de jogador
        {"player", "user", "client", "character", "avatar", "entity", "unit"},
        {"health", "damage", "life", "hp", "mp", "stamina", "mana", "shield"}
    }
    
    local function scanPatterns(container, path)
        for _, obj in pairs(container:GetChildren()) do
            if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") or 
               obj:IsA("IntValue") or obj:IsA("StringValue") or obj:IsA("NumberValue") then
                
                local objName = string.lower(obj.Name)
                
                -- Verificar cada padr√£o
                for categoryIndex, patternGroup in ipairs(suspiciousPatterns) do
                    for _, pattern in ipairs(patternGroup) do
                        if string.find(objName, pattern) then
                            local suspicionLevel = "MEDIUM"
                            local category = "Hidden Pattern"
                            local patternType = ""
                            
                            if categoryIndex == 1 then
                                patternType = "üí∞ Economia Disfar√ßada"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 2 then
                                patternType = "üíé Sistema Monet√°rio"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 3 then
                                patternType = "üéÅ Sistema de Recompensas"
                                suspicionLevel = "MEDIUM"
                            elseif categoryIndex == 4 then
                                patternType = "‚öôÔ∏è Sistema de Controle"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 5 then
                                patternType = "üìã Sistema de Comandos"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 6 then
                                patternType = "üîß Sistema Principal"
                                suspicionLevel = "MEDIUM"
                            elseif categoryIndex == 7 then
                                patternType = "üöÄ Sistema de Movimento"
                                suspicionLevel = "MEDIUM"
                            elseif categoryIndex == 8 then
                                patternType = "üìç Sistema de Posi√ß√£o"
                                suspicionLevel = "MEDIUM"
                            elseif categoryIndex == 9 then
                                patternType = "üìà Sistema de Progress√£o"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 10 then
                                patternType = "‚≠ê Sistema de Experi√™ncia"
                                suspicionLevel = "HIGH"
                            elseif categoryIndex == 11 then
                                patternType = "üë§ Sistema de Jogador"
                                suspicionLevel = "MEDIUM"
                            elseif categoryIndex == 12 then
                                patternType = "‚ù§Ô∏è Sistema de Vida/Dano"
                                suspicionLevel = "MEDIUM"
                            end
                            
                            addStealth(category, obj.Name, path, suspicionLevel, 
                                      patternType, "Cont√©m palavra suspeita: '" .. pattern .. "'")
                            break
                        end
                    end
                end
            end
            
            if #obj:GetChildren() > 0 then
                scanPatterns(obj, path .. "/" .. obj.Name)
            end
        end
    end
    
    scanPatterns(ReplicatedStorage, "ReplicatedStorage")
    scanPatterns(Workspace, "Workspace")
end

-- AN√ÅLISE DE ESTRUTURAS SUSPEITAS
local function analyzeStructuralPatterns()
    print("üîç Analisando estruturas suspeitas...")
    
    -- 2. DETECTAR ESTRUTURAS ORGANIZACIONAIS SUSPEITAS
    local function scanSuspiciousStructures(container, path)
        for _, obj in pairs(container:GetChildren()) do
            -- Detectar pastas com muitos RemoteEvents
            if obj:IsA("Folder") then
                local remoteCount = 0
                local valueCount = 0
                
                for _, child in pairs(obj:GetChildren()) do
                    if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
                        remoteCount = remoteCount + 1
                    elseif child:IsA("IntValue") or child:IsA("StringValue") or child:IsA("NumberValue") then
                        valueCount = valueCount + 1
                    end
                end
                
                -- Pasta com muitos RemoteEvents = suspeita
                if remoteCount >= 5 then
                    addStealth("Structural", obj.Name, path, "HIGH", 
                              "üìÅ Pasta com Muitos Remotes", 
                              string.format("Cont√©m %d RemoteEvents (poss√≠vel hub de comandos)", remoteCount))
                end
                
                -- Pasta com muitos Values = suspeita  
                if valueCount >= 8 then
                    addStealth("Structural", obj.Name, path, "MEDIUM", 
                              "üìä Pasta com Muitos Values", 
                              string.format("Cont√©m %d Values (poss√≠vel sistema de dados)", valueCount))
                end
            end
            
            if #obj:GetChildren() > 0 then
                scanSuspiciousStructures(obj, path .. "/" .. obj.Name)
            end
        end
    end
    
    scanSuspiciousStructures(ReplicatedStorage, "ReplicatedStorage")
end

-- AN√ÅLISE DE NOMES CODIFICADOS
local function analyzeEncodedNames()
    print("üîç Analisando nomes codificados...")
    
    -- 3. DETECTAR NOMES CODIFICADOS/ENCRIPTADOS
    local function scanEncodedNames(container, path)
        for _, obj in pairs(container:GetChildren()) do
            if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") or 
               obj:IsA("IntValue") or obj:IsA("StringValue") or obj:IsA("NumberValue") then
                
                local name = obj.Name
                
                -- Detectar padr√µes de codifica√ß√£o
                local suspiciousNamePatterns = {
                    -- Nomes muito curtos (poss√≠vel c√≥digo)
                    {pattern = "^[A-Za-z]{1,2}$", reason = "Nome muito curto (c√≥digo?)", level = "LOW"},
                    
                    -- Nomes com n√∫meros no meio (suspeito)
                    {pattern = "[A-Za-z]+%d+[A-Za-z]+", reason = "Padr√£o alfanum√©rico suspeito", level = "MEDIUM"},
                    
                    -- Nomes com underscores m√∫ltiplos
                    {pattern = ".*__.*", reason = "M√∫ltiplos underscores (padr√£o de sistema)", level = "MEDIUM"},
                    
                    -- Nomes em CAPS (poss√≠vel import√¢ncia)
                    {pattern = "^[A-Z_]+$", reason = "Todo em mai√∫sculas (sistema importante?)", level = "LOW"},
                    
                    -- Nomes com padr√£o hexadecimal
                    {pattern = "^[A-Fa-f0-9]+$", reason = "Padr√£o hexadecimal (ID codificado?)", level = "HIGH"},
                    
                    -- Nomes Base64-like
                    {pattern = "^[A-Za-z0-9+/]+={0,2}$", reason = "Poss√≠vel Base64", level = "MEDIUM"},
                    
                    -- Nomes reversed (palavras ao contr√°rio)
                    {pattern = ".*", reason = "", level = "MEDIUM"} -- Processado especialmente abaixo
                }
                
                for _, namePattern in ipairs(suspiciousNamePatterns) do
                    if namePattern.pattern ~= ".*" and string.match(name, namePattern.pattern) then
                        addStealth("Encoded Name", name, path, namePattern.level, 
                                  "üîê Nome Codificado", namePattern.reason)
                        break
                    end
                end
                
                -- Verificar palavras reversed (ao contr√°rio)
                local commonWords = {"admin", "money", "cash", "give", "take", "user", "player", "level"}
                for _, word in ipairs(commonWords) do
                    local reversed = string.reverse(word)
                    if string.lower(name) == reversed then
                        addStealth("Encoded Name", name, path, "HIGH", 
                                  "üîÑ Palavra Invertida", 
                                  "Nome √© '" .. word .. "' ao contr√°rio!")
                    end
                end
                
                -- Verificar ROT13 simples
                local function simpleRot13(str)
                    return str:gsub("[A-Za-z]", function(c)
                        local offset = c:match("[A-Z]") and 65 or 97
                        return string.char((c:byte() - offset + 13) % 26 + offset)
                    end)
                end
                
                local rot13Name = simpleRot13(string.lower(name))
                for _, word in ipairs(commonWords) do
                    if rot13Name == word then
                        addStealth("Encoded Name", name, path, "HIGH", 
                                  "üîÄ ROT13 Encoding", 
                                  "Nome decodifica para: " .. word)
                    end
                end
            end
            
            if #obj:GetChildren() > 0 then
                scanEncodedNames(obj, path .. "/" .. obj.Name)
            end
        end
    end
    
    scanEncodedNames(ReplicatedStorage, "ReplicatedStorage")
end

-- AN√ÅLISE DE VALORES SUSPEITOS
local function analyzeValuePatterns()
    print("üîç Analisando padr√µes de valores...")
    
    -- 4. ANALISAR VALORES REAIS DOS OBJECTS
    local function scanValueContents(container, path)
        for _, obj in pairs(container:GetChildren()) do
            -- Analisar IntValues com valores suspeitos
            if obj:IsA("IntValue") then
                local value = obj.Value
                
                -- Valores t√≠picos de dinheiro/level
                if value == 1000 or value == 5000 or value == 10000 or value == 50000 or value == 100000 then
                    addStealth("Suspicious Value", obj.Name, path, "MEDIUM", 
                              "üí∞ Valor Monet√°rio T√≠pico", 
                              "Valor = " .. value .. " (comum em sistemas de dinheiro)")
                end
                
                -- Valores de level t√≠picos
                if value >= 1 and value <= 100 and value % 5 == 0 then
                    addStealth("Suspicious Value", obj.Name, path, "LOW", 
                              "üìà Poss√≠vel Level/Rank", 
                              "Valor = " .. value .. " (t√≠pico de sistema de levels)")
                end
            end
            
            -- Analisar StringValues com conte√∫do suspeito
            if obj:IsA("StringValue") then
                local value = string.lower(obj.Value)
                local suspiciousStrings = {"true", "false", "enabled", "disabled", "admin", "mod", "owner"}
                
                for _, susStr in ipairs(suspiciousStrings) do
                    if value == susStr then
                        addStealth("Suspicious Value", obj.Name, path, "MEDIUM", 
                                  "üîß String de Configura√ß√£o", 
                                  "Valor = '" .. obj.Value .. "' (configura√ß√£o de sistema)")
                    end
                end
            end
            
            if #obj:GetChildren() > 0 then
                scanValueContents(obj, path .. "/" .. obj.Name)
            end
        end
    end
    
    scanValueContents(ReplicatedStorage, "ReplicatedStorage")
end

-- AN√ÅLISE DE GLOBALS AVAN√áADA
local function analyzeAdvancedGlobals()
    print("üîç Analisando vari√°veis globais avan√ßadas...")
    
    -- 5. AN√ÅLISE PROFUNDA DE _G e shared
    local globalCount = 0
    for k, v in pairs(_G) do
        globalCount = globalCount + 1
        if globalCount > 100 then break end
        
        local keyStr = tostring(k)
        local valueType = type(v)
        
        -- Detectar fun√ß√µes com nomes suspeitos (n√£o √≥bvios)
        if valueType == "function" then
            local lowerKey = string.lower(keyStr)
            
            -- Padr√µes de fun√ß√£o suspeitos
            if string.find(lowerKey, "update") or string.find(lowerKey, "set") or 
               string.find(lowerKey, "get") or string.find(lowerKey, "change") or
               string.find(lowerKey, "modify") or string.find(lowerKey, "handle") then
                addStealth("Global Function", keyStr, "_G", "MEDIUM", 
                          "üîß Fun√ß√£o de Sistema", 
                          "Fun√ß√£o global que pode modificar dados")
            end
        end
        
        -- Detectar tabelas grandes (poss√≠veis sistemas)
        if valueType == "table" then
            local success, tableSize = pcall(function()
                local count = 0
                for _ in pairs(v) do count = count + 1 end
                return count
            end)
            
            if success and tableSize > 10 then
                addStealth("Global Table", keyStr, "_G", "LOW", 
                          "üìä Tabela Grande", 
                          "Tabela com " .. tableSize .. " entradas (poss√≠vel sistema)")
            end
        end
    end
end

-- INTERFACE STEALTH
local function createStealthGUI(findings)
    local gui = Instance.new("ScreenGui")
    gui.Name = "StealthScan"
    gui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 600, 0, 500)
    frame.Position = UDim2.new(0.5, -300, 0.5, -250)
    frame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(100, 50, 200)
    frame.Parent = gui
    
    -- T√≠tulo stealth
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 50)
    title.BackgroundColor3 = Color3.fromRGB(30, 15, 40)
    title.BorderSizePixel = 0
    title.Text = "üïµÔ∏è STEALTH VULNERABILITY SCANNER"
    title.TextColor3 = Color3.fromRGB(200, 150, 255)
    title.TextSize = 16
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    -- Estat√≠sticas
    local stats = Instance.new("TextLabel")
    stats.Size = UDim2.new(1, -20, 0, 30)
    stats.Position = UDim2.new(0, 10, 0, 55)
    stats.BackgroundTransparency = 1
    stats.Text = string.format("üîç %d padr√µes suspeitos detectados", #findings)
    stats.TextColor3 = Color3.fromRGB(255, 255, 255)
    stats.TextSize = 14
    stats.Font = Enum.Font.SourceSans
    stats.Parent = frame
    
    -- ScrollFrame para resultados
    local scroll = Instance.new("ScrollingFrame")
    scroll.Size = UDim2.new(1, -20, 1, -125)
    scroll.Position = UDim2.new(0, 10, 0, 90)
    scroll.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    scroll.BorderSizePixel = 1
    scroll.BorderColor3 = Color3.fromRGB(60, 60, 70)
    scroll.ScrollBarThickness = 8
    scroll.Parent = frame
    
    -- Agrupar por categoria
    local categories = {}
    for _, finding in ipairs(findings) do
        if not categories[finding.category] then
            categories[finding.category] = {}
        end
        table.insert(categories[finding.category], finding)
    end
    
    local yPos = 5
    for category, categoryFindings in pairs(categories) do
        -- Cabe√ßalho da categoria
        local categoryHeader = Instance.new("TextLabel")
        categoryHeader.Size = UDim2.new(1, -10, 0, 25)
        categoryHeader.Position = UDim2.new(0, 5, 0, yPos)
        categoryHeader.BackgroundColor3 = Color3.fromRGB(50, 30, 70)
        categoryHeader.BorderSizePixel = 0
        categoryHeader.Text = "üìÅ " .. category .. " (" .. #categoryFindings .. ")"
        categoryHeader.TextColor3 = Color3.fromRGB(200, 150, 255)
        categoryHeader.TextSize = 13
        categoryHeader.Font = Enum.Font.SourceSansBold
        categoryHeader.TextXAlignment = Enum.TextXAlignment.Left
        categoryHeader.Parent = scroll
        
        yPos = yPos + 30
        
        -- Items da categoria
        for _, finding in ipairs(categoryFindings) do
            local item = Instance.new("TextLabel")
            item.Size = UDim2.new(1, -20, 0, 50)
            item.Position = UDim2.new(0, 15, 0, yPos)
            item.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            item.BorderSizePixel = 0
            
            -- Cores por suspei√ß√£o
            local suspicionColors = {
                CRITICAL = Color3.fromRGB(255, 100, 100),
                HIGH = Color3.fromRGB(255, 150, 100),
                MEDIUM = Color3.fromRGB(255, 200, 100),
                LOW = Color3.fromRGB(200, 200, 200)
            }
            
            item.Text = string.format("‚Ä¢ [%s] %s\n  %s\n  üí° %s", 
                finding.suspicion, finding.name, finding.pattern, finding.details)
            item.TextColor3 = suspicionColors[finding.suspicion] or Color3.fromRGB(255, 255, 255)
            item.TextSize = 11
            item.Font = Enum.Font.SourceSans
            item.TextXAlignment = Enum.TextXAlignment.Left
            item.TextYAlignment = Enum.TextYAlignment.Top
            item.TextWrapped = true
            item.Parent = scroll
            
            yPos = yPos + 55
        end
        
        yPos = yPos + 10
    end
    
    scroll.CanvasSize = UDim2.new(0, 0, 0, yPos)
    
    -- Bot√£o fechar
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 80, 0, 25)
    closeBtn.Position = UDim2.new(1, -90, 1, -35)
    closeBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 150)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "Fechar"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = 12
    closeBtn.Font = Enum.Font.SourceSans
    closeBtn.Parent = frame
    
    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)
end

-- SCANNER PRINCIPAL STEALTH
local function runStealthScan()
    print("üïµÔ∏è Iniciando STEALTH VULNERABILITY SCAN...")
    print("üîç Procurando vulnerabilidades com nomes ESCONDIDOS...")
    
    stealthFindings = {}
    
    -- Executar todas as an√°lises
    analyzeSuspiciousPatterns()
    analyzeStructuralPatterns()
    analyzeEncodedNames()
    analyzeValuePatterns()
    analyzeAdvancedGlobals()
    
    -- Mostrar interface
    createStealthGUI(stealthFindings)
    
    -- Relat√≥rio no console
    print("\nüïµÔ∏è RELAT√ìRIO STEALTH:")
    print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
    
    if #stealthFindings == 0 then
        print("üõ°Ô∏è Impressionante! Nenhum padr√£o suspeito detectado!")
        print("üèÜ Este jogo tem seguran√ßa MUITO boa ou √© muito simples")
    else
        print("üö® PADR√ïES SUSPEITOS ENCONTRADOS:")
        
        local severityCount = {CRITICAL = 0, HIGH = 0, MEDIUM = 0, LOW = 0}
        
        for _, finding in ipairs(stealthFindings) do
            severityCount[finding.suspicion] = severityCount[finding.suspicion] + 1
            print(string.format("[%s] %s - %s", finding.suspicion, finding.name, finding.pattern))
        end
        
        print("\nüìä RESUMO:")
        print("üî¥ CR√çTICOS: " .. severityCount.CRITICAL)
        print("üü† ALTOS: " .. severityCount.HIGH)
        print("üü° M√âDIOS: " .. severityCount.MEDIUM)
        print("‚ö™ BAIXOS: " .. severityCount.LOW)
    end
    
    print("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê")
    print("üéØ Stealth scan conclu√≠do!")
end

-- Auto-executar
spawn(function()
    wait(3)
    runStealthScan()
end)

_G.StealthScan = runStealthScan

print("üïµÔ∏è Stealth Vulnerability Scanner carregado!")
print("üîç Este scanner encontra vulnerabilidades com nomes DISFAR√áADOS!")
print("üíª Uso manual: _G.StealthScan()")